// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	config "gophermart-loyalty/internal/config"

	mock "github.com/stretchr/testify/mock"
)

// CfgFunc is an autogenerated mock type for the CfgFunc type
type CfgFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *CfgFunc) Execute(_a0 *config.Config) (*config.Config, error) {
	ret := _m.Called(_a0)

	var r0 *config.Config
	if rf, ok := ret.Get(0).(func(*config.Config) *config.Config); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Config)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*config.Config) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCfgFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewCfgFunc creates a new instance of CfgFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCfgFunc(t mockConstructorTestingTNewCfgFunc) *CfgFunc {
	mock := &CfgFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
